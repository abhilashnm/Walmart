pipeline{

agent{
label"nodes"
}

//agent any

/* parameters {
  choice choices: ['development', 'master', 'qa'], description: 'select branch name', name: 'BranchName'
}
*/

tools{
maven "maven3.8.6"
}
triggers {
  pollSCM('* * * * *')
  //cron('* * * * *')
}

options {
  timestamps()
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
}


stages{

  //get the code from github
  stage('checkoutCode'){
  steps{
  slacknotifications('STARTED')      
  git branch: 'development', credentialsId: '875a1968-c2b2-4351-a2af-bad688a21892', url: 'https://github.com/abhilashnm/maven-web-application.git'

  }
  }
  
  //do the build
  stage('Build'){
  steps{
  sh "mvn clean package"
  }
  }
  
  //execute sonarQube report
  stage('executeSonarQubereport'){
  steps{
  sh "mvn sonar:sonar"
  }
  }
  
  //upload artifacts in to repository
  stage('UploadArtifatctsInToNexus'){
  steps{
  sh "mvn deploy"
  }
  }
  
  //deploy application to tomcatserver
  stage('DeployAppInToTomcatServer'){
  steps{
  sshagent(['fbcca702-dbc8-43cf-a00a-fd493677b733']) {
  sh "scp -o  StrictHostKeyChecking=no target/maven-web-application.war ec2-user@http://43.205.116.210:/opt/apache-tomcat-9.0.64/webapps/"
  }
  }
  }
  
  
  

}//stagesclosing

post {
  success {
  slacknotifications(currentBuild.result)  
  }
  failure {
  slacknotifications(currentBuild.result)  
  }
  }
  


}//pipelineclosing

def slacknotifications(String buildStatus = 'STARTED') {
  
    buildStatus =  buildStatus ?: 'SUCCESS'
	
   // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"  

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
